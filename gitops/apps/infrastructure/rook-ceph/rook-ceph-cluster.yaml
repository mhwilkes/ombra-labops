apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rook-ceph-cluster
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    repoURL: https://charts.rook.io/release
    chart: rook-ceph-cluster
    targetRevision: v1.17.5
    helm:
      releaseName: rook-ceph-cluster
      parameters:
        - name: operatorNamespace
          value: rook-ceph      
      values: |
        # External Ceph Cluster Configuration
        cephClusterSpec:
          external:
            enable: true
          crashCollector:
            disable: true
          healthCheck:
            daemonHealth:
              mon:
                disabled: false
                interval: 45s

        # Disable all internal Ceph resources for external cluster
        cephBlockPools: []
        cephFileSystems: []
        cephObjectStores: []

        # Configure CephNFS for NFS shares
        cephNFS:
          - name: media-nfs
            server:
              active: 2
              logLevel: "INFO"
              placement:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: node-role.kubernetes.io/control-plane
                            operator: DoesNotExist
              resources:
                limits:
                  cpu: "1000m"
                  memory: "2Gi"
                requests:
                  cpu: "500m"
                  memory: "1Gi"
            rados:
              pool: "cephfs_metadata"
              namespace: "nfs-ganesha"

        # Storage classes for NFS
        storageClasses:
          - name: ceph-nfs
            isDefault: false
            reclaimPolicy: Delete
            allowVolumeExpansion: true
            volumeBindingMode: Immediate
            provisioner: nfs.csi.ceph.com
            parameters:
              nfsCluster: media-nfs
              server: rook-nfs-media-nfs.rook-ceph.svc.cluster.local

        # Enable toolbox for management
        cephToolbox:
          enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: rook-ceph
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
