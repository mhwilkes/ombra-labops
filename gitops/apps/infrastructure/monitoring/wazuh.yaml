---
apiVersion: v1
kind: Namespace
metadata:
  name: wazuh-system
  labels:
    name: wazuh-system
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: elasticsearch
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    helm:
      releaseName: elasticsearch
      values: |
        # Elasticsearch configuration for Wazuh
        clusterName: "wazuh-cluster"
        nodeGroup: "master"
        
        # Resource configuration optimized for your cluster
        replicas: 1
        minimumMasterNodes: 1
        
        # Resource limits
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            cpu: "1000m"
            memory: "4Gi"
        
        # JVM heap size
        esJavaOpts: "-Xmx2g -Xms2g"
        
        # Persistence configuration
        persistence:
          enabled: true
          storageClass: "ceph-rbd"
          size: 30Gi
          accessModes:
            - ReadWriteOnce
        
        # Security settings
        esConfig:
          elasticsearch.yml: |
            xpack.security.enabled: true
            xpack.security.transport.ssl.enabled: true
            xpack.security.transport.ssl.verification_mode: certificate
            xpack.security.transport.ssl.client_authentication: required
            xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/tls.crt
            xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/tls.key
            xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
            xpack.security.http.ssl.enabled: true
            xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/certs/tls.crt
            xpack.security.http.ssl.key: /usr/share/elasticsearch/config/certs/tls.key
            xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
            xpack.monitoring.collection.enabled: true
        
        # Service configuration
        service:
          type: ClusterIP
          httpPort: 9200
          transportPort: 9300
        
        # Security context
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        
        # Node selector and tolerations
        nodeSelector: {}
        tolerations: []
        
        # Anti-affinity for resilience
        antiAffinity: "soft"
        
        # Health checks
        readinessProbe:
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Create initial admin user
        extraEnvs:
          - name: ELASTIC_PASSWORD
            value: "wazuh123"  # Change this in production
          - name: bootstrap.password
            value: "wazuh123"
  destination:
    server: https://kubernetes.default.svc
    namespace: wazuh-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: wazuh-manager
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: wazuh
    repoURL: https://wazuh.github.io/wazuh-kubernetes
    targetRevision: 4.9.0
    helm:
      releaseName: wazuh-manager
      values: |
        # Wazuh Manager configuration
        wazuhManager:
          replicaCount: 1
          
          image:
            repository: wazuh/wazuh-manager
            tag: 4.12.0
            pullPolicy: IfNotPresent
          
          # Resource configuration
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          
          # Persistence for Wazuh data
          persistence:
            enabled: true
            storageClass: ceph-rbd
            size: 20Gi
            accessModes:
              - ReadWriteOnce
          
          # Service configuration
          service:
            type: ClusterIP
            ports:
              api: 55000
              agents: 1514
              syslog: 514
          
          # Environment variables
          env:
            - name: INDEXER_URL
              value: "https://elasticsearch-master:9200"
            - name: INDEXER_USERNAME
              value: "elastic"
            - name: INDEXER_PASSWORD
              value: "wazuh123"
            - name: FILEBEAT_SSL_VERIFICATION_MODE
              value: "none"
            - name: SSL_CERTIFICATE_AUTHORITIES
              value: ""
            - name: SSL_CERTIFICATE
              value: ""
            - name: SSL_KEY
              value: ""
          
          # Security context
          securityContext:
            fsGroup: 999
            runAsUser: 999
          
          # Configuration files
          config:
            ossec.conf: |
              <ossec_config>
                <global>
                  <jsonout_output>yes</jsonout_output>
                  <alerts_log>yes</alerts_log>
                  <logall>no</logall>
                  <logall_json>no</logall_json>
                  <email_notification>no</email_notification>
                  <smtp_server>localhost</smtp_server>
                  <email_from>wazuh@ombra.local</email_from>
                  <email_to>admin@ombra.local</email_to>
                  <hostname>wazuh-manager</hostname>
                  <email_maxperhour>12</email_maxperhour>
                  <email_log_source>alerts.log</email_log_source>
                  <agents_disconnection_time>10m</agents_disconnection_time>
                  <agents_disconnection_alert_time>0</agents_disconnection_alert_time>
                </global>
                
                <alerts>
                  <log_alert_level>3</log_alert_level>
                  <email_alert_level>12</email_alert_level>
                </alerts>
                
                <remote>
                  <connection>secure</connection>
                  <port>1514</port>
                  <protocol>tcp</protocol>
                  <queue_size>131072</queue_size>
                </remote>
                
                <auth>
                  <disabled>no</disabled>
                  <port>1515</port>
                  <use_source_ip>no</use_source_ip>
                  <force_insert>no</force_insert>
                  <purge>yes</purge>
                  <use_password>no</use_password>
                  <ciphers>HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH</ciphers>
                  <ssl_agent_ca></ssl_agent_ca>
                  <ssl_verify_host>no</ssl_verify_host>
                  <ssl_manager_cert></ssl_manager_cert>
                  <ssl_manager_key></ssl_manager_key>
                  <ssl_auto_negotiate>no</ssl_auto_negotiate>
                </auth>
                
                <logging>
                  <log_format>plain</log_format>
                </logging>
                
                <cluster>
                  <name>wazuh</name>
                  <node_name>wazuh-manager</node_name>
                  <node_type>master</node_type>
                  <key></key>
                  <port>1516</port>
                  <bind_addr>0.0.0.0</bind_addr>
                  <nodes>
                    <node>wazuh-manager</node>
                  </nodes>
                  <hidden>no</hidden>
                  <disabled>yes</disabled>
                </cluster>
                
                <vulnerability-detection>
                  <enabled>yes</enabled>
                  <index-status>yes</index-status>
                  <feed-update-interval>60m</feed-update-interval>
                </vulnerability-detection>
                
                <indexer>
                  <enabled>yes</enabled>
                  <hosts>
                    <host>https://elasticsearch-master:9200</host>
                  </hosts>
                  <ssl>
                    <certificate_authorities></certificate_authorities>
                    <certificate></certificate>
                    <key></key>
                  </ssl>
                </indexer>
                
                <monitoring>
                  <enabled>yes</enabled>
                  <frequency>900</frequency>
                  <compress>yes</compress>
                  <day_wait>7</day_wait>
                </monitoring>
                
                <sca>
                  <enabled>yes</enabled>
                  <scan_on_start>yes</scan_on_start>
                  <interval>12h</interval>
                  <skip_nfs>yes</skip_nfs>
                </sca>
                
                <rootcheck>
                  <disabled>no</disabled>
                  <check_files>yes</check_files>
                  <check_trojans>yes</check_trojans>
                  <check_dev>yes</check_dev>
                  <check_sys>yes</check_sys>
                  <check_pids>yes</check_pids>
                  <check_ports>yes</check_ports>
                  <check_if>yes</check_if>
                  <frequency>43200</frequency>
                  <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>
                  <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>
                  <skip_nfs>yes</skip_nfs>
                </rootcheck>
                
                <wodle name="cis-cat">
                  <disabled>yes</disabled>
                  <timeout>1800</timeout>
                  <interval>1d</interval>
                  <scan-on-start>yes</scan-on-start>
                </wodle>
                
                <wodle name="osquery">
                  <disabled>yes</disabled>
                  <run_daemon>yes</run_daemon>
                  <log_path>/var/log/osquery/osqueryd.results.log</log_path>
                  <config_path>/etc/osquery/osquery.conf</config_path>
                  <add_labels>yes</add_labels>
                </wodle>
                
                <wodle name="syscollector">
                  <disabled>no</disabled>
                  <interval>1h</interval>
                  <scan_on_start>yes</scan_on_start>
                  <hardware>yes</hardware>
                  <os>yes</os>
                  <network>yes</network>
                  <packages>yes</packages>
                  <ports all="no">yes</ports>
                  <processes>yes</processes>
                  <hotfixes>yes</hotfixes>
                </wodle>
                
                <wodle name="aws-s3">
                  <disabled>yes</disabled>
                </wodle>
                
                <wodle name="docker-listener">
                  <disabled>no</disabled>
                  <interval>10m</interval>
                  <attempts>5</attempts>
                  <run_on_start>yes</run_on_start>
                </wodle>
              </ossec_config>
        
        # Node selector and tolerations
        nodeSelector: {}
        tolerations: []
  destination:
    server: https://kubernetes.default.svc
    namespace: wazuh-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 15s
        factor: 2
        maxDuration: 5m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: wazuh-dashboard
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: wazuh-dashboard
    repoURL: https://wazuh.github.io/wazuh-kubernetes
    targetRevision: 4.9.0
    helm:
      releaseName: wazuh-dashboard
      values: |
        # Wazuh Dashboard (Kibana-based) configuration
        replicaCount: 1
        
        image:
          repository: wazuh/wazuh-dashboard
          tag: 4.12.0
          pullPolicy: IfNotPresent
        
        # Resource configuration
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 2Gi
        
        # Service configuration
        service:
          type: ClusterIP
          port: 5601
        
        # Ingress configuration
        ingress:
          enabled: true
          className: nginx
          annotations:
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
            cert-manager.io/cluster-issuer: letsencrypt-prod
          hosts:
            - host: wazuh.michaelwilkes.dev
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: wazuh-dashboard-tls
              hosts:
                - wazuh.michaelwilkes.dev
        
        # Environment variables
        env:
          - name: INDEXER_URL
            value: "https://elasticsearch-master:9200"
          - name: INDEXER_USERNAME
            value: "elastic"
          - name: INDEXER_PASSWORD
            value: "wazuh123"
          - name: WAZUH_API_URL
            value: "https://wazuh-manager:55000"
          - name: DASHBOARD_USERNAME
            value: "wazuh"
          - name: DASHBOARD_PASSWORD
            value: "wazuh123"  # Change this in production
        
        # Security context
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        
        # Configuration
        config:
          opensearch_dashboards.yml: |
            server.host: 0.0.0.0
            server.port: 5601
            opensearch.hosts: ["https://elasticsearch-master:9200"]
            opensearch.ssl.verificationMode: none
            opensearch.username: "elastic"
            opensearch.password: "wazuh123"
            opensearch.requestHeadersWhitelist: ["authorization", "securitytenant"]
            opensearch_security.multitenancy.enabled: false
            opensearch_security.readonly_mode.roles: ["kibana_read_only"]
            server.ssl.enabled: false
            opensearch.ssl.certificateAuthorities: []
            uiSettings.overrides.defaultRoute: "/app/wz-home"
            
        # Health checks
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
        
        # Node selector and tolerations
        nodeSelector: {}
        tolerations: []
  destination:
    server: https://kubernetes.default.svc
    namespace: wazuh-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 20s
        factor: 2
        maxDuration: 5m
