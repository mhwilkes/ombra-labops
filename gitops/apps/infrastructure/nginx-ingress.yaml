apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.13.0
    helm:
      values: |
        controller:
          # Service configuration
          service:
            type: LoadBalancer
            loadBalancerIP: 192.168.55.205
            externalTrafficPolicy: Local
            annotations:
              # Preserve source IP
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
              service.beta.kubernetes.io/aws-load-balancer-type: nlb
            # Enable metrics - ServiceMonitor disabled until Prometheus Operator is installed
          metrics:
            enabled: true
            serviceMonitor:
              enabled: false
          
          # Resource limits
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          
          # Pod disruption budget
          podDisruptionBudget:
            enabled: true
            minAvailable: 1
          
          # Autoscaling
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 10
            targetCPUUtilizationPercentage: 80            
            targetMemoryUtilizationPercentage: 80
          
          # Security context
          allowSnippetAnnotations: true
          
          # Admission webhook configuration
          admissionWebhooks:
            enabled: true
            failurePolicy: Fail
            port: 8443
            certificate: "/usr/local/certificates/cert"
            key: "/usr/local/certificates/key"            
            namespaceSelector: {}
            objectSelector: {}
            annotations: {}
            # Patch configuration for admission webhook
            patch:
              enabled: true
              image:
                repository: registry.k8s.io/ingress-nginx/kube-webhook-certgen
                tag: v20230626
                digest: sha256:543c40fd093964bc9ab509d3e791f9989963021f10de6ce233b36b4b06abc787
              priorityClassName: ""
              podAnnotations: {}
              nodeSelector:
                kubernetes.io/os: linux
              tolerations: []
              labels: {}
              securityContext:
                runAsNonRoot: true
                runAsUser: 2000
                fsGroup: 2000
              # Job configuration for certificate generation
              job:
                ttlSecondsAfterFinished: 0            # Certificate generation patch job
            certManager:
              enabled: true
              rootCert:
                duration: ""  # default to 1 year
              admissionCert:
                duration: ""  # default to 1 year
              # Use cert-manager to generate webhook certificates
              issuerRef:
                name: selfsigned-issuer
                kind: ClusterIssuer
                group: cert-manager.io
          
          # Configuration
          config:
            # Enable real IP forwarding
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "false"
            
            # SSL configuration
            ssl-protocols: "TLSv1.2 TLSv1.3"
            ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"
            
            # Performance tuning
            worker-processes: "auto"
            max-worker-connections: "16384"
            worker-cpu-affinity: "auto"
            
            # Logging
            log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}'
          # Default backend
        defaultBackend:
          enabled: true
          image:
            repository: registry.k8s.io/defaultbackend-amd64
            tag: "1.5"
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 20Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
