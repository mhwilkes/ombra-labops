apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: wazuh

labels:
  - pairs:
      app.kubernetes.io/part-of: wazuh
      app.kubernetes.io/managed-by: argocd
    includeSelectors: false

resources:
  - ../../base
  - ./namespace.yaml
  - ./ingress-dashboard.yaml
  - ./ingress-api.yaml
patches:
  # Instruct Argo CD to replace resources that otherwise violate immutability (selectors/spec) and tune resources
  - target:
      group: apps
      version: v1
      kind: Deployment
      name: wazuh-dashboard
    patch: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: wazuh-dashboard
      spec:
        template:
          spec:
            containers:
              - name: wazuh-dashboard
                env:
                  - name: WAZUH_API_URL
                    value: https://wazuh:55000
                  - name: WAZUH_API_USER
                    valueFrom:
                      secretKeyRef:
                        name: wazuh-api-cred
                        key: username
                  - name: WAZUH_API_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: wazuh-api-cred
                        key: password
                  - name: NODE_EXTRA_CA_CERTS
                    value: /usr/share/wazuh-dashboard/certs/root-ca.pem
            volumes: []
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: wazuh-indexer
    patch: |
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: wazuh-indexer
      spec:
        template:
          spec:
            containers:
              - name: wazuh-indexer
                resources:
                  requests:
                    cpu: 500m
                    memory: 2Gi
                  limits:
                    cpu: "2"
                    memory: 4Gi
                env:
                  - name: OPENSEARCH_JAVA_OPTS
                    value: "-Xms2g -Xmx2g -Dlog4j2.formatMsgNoLookups=true"
  # Patch master statefulset to add missing API configuration mount (align with worker) and drop overriding incomplete ossec.conf if needed later
  - target:
      group: apps
      version: v1
      kind: StatefulSet
      name: wazuh-manager-master
    patch: |
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: wazuh-manager-master
      spec:
        template:
          spec:
            containers:
              - name: wazuh-manager
                volumeMounts:
                  - name: wazuh-manager-master
                    mountPath: /var/ossec/api/configuration
                    subPath: wazuh/var/ossec/api/configuration
  # Replace the overly-minimal wazuh-conf ConfigMap with a fuller baseline config so daemons start
  - target:
      version: v1
      kind: ConfigMap
      name: wazuh-conf
    patch: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: wazuh-conf
      data:
        master.conf: |
          <ossec_config>
            <global>
              <email_notification>no</email_notification>
              <logall>no</logall>
              <logall_json>yes</logall_json>
              <jsonout_output>yes</jsonout_output>
            </global>
            <!-- Remote (manager <-> agents). Wazuh 4.12 expects direct elements, not nested <connection><type>. -->
            <remote>
              <connection>secure</connection>
              <port>1515</port>
              <protocol>tcp</protocol>
            </remote>
            <cluster>
              <name>wazuh</name>
              <node_name>master</node_name>
              <node_type>master</node_type>
              <key>CHANGEME</key>
              <port>1516</port>
              <bind_addr>0.0.0.0</bind_addr>
              <disabled>no</disabled>
            </cluster>
            <ruleset>
              <decoder_dir>ruleset/decoders</decoder_dir>
              <rule_dir>ruleset/rules</rule_dir>
              <rule_dir>ruleset/local</rule_dir>
            </ruleset>
            <syscheck>
              <disabled>no</disabled>
              <frequency>43200</frequency>
              <scan_on_start>yes</scan_on_start>
            </syscheck>
            <localfile>
              <log_format>json</log_format>
              <location>/var/ossec/logs/alerts/alerts.json</location>
            </localfile>
          </ossec_config>
        worker.conf: |
          <ossec_config>
            <global>
              <email_notification>no</email_notification>
              <logall>no</logall>
              <logall_json>yes</logall_json>
              <jsonout_output>yes</jsonout_output>
            </global>
            <remote>
              <connection>secure</connection>
              <port>1515</port>
              <protocol>tcp</protocol>
            </remote>
            <cluster>
              <name>wazuh</name>
              <node_name>worker</node_name>
              <node_type>worker</node_type>
              <key>CHANGEME</key>
              <port>1516</port>
              <bind_addr>0.0.0.0</bind_addr>
              <manager>wazuh-cluster</manager>
              <disabled>no</disabled>
            </cluster>
            <ruleset>
              <decoder_dir>ruleset/decoders</decoder_dir>
              <rule_dir>ruleset/rules</rule_dir>
              <rule_dir>ruleset/local</rule_dir>
            </ruleset>
            <syscheck>
              <disabled>no</disabled>
              <frequency>43200</frequency>
              <scan_on_start>yes</scan_on_start>
            </syscheck>
            <localfile>
              <log_format>json</log_format>
              <location>/var/ossec/logs/alerts/alerts.json</location>
            </localfile>
          </ossec_config>
