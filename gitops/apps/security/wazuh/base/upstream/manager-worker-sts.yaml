apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wazuh-manager-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-manager
      node-type: worker
  serviceName: wazuh-cluster
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: wazuh-manager
        node-type: worker
      name: wazuh-manager-worker
    spec:
      volumes:
        - name: config
          configMap:
            name: wazuh-conf
        - name: config-generated
          emptyDir: {}
        - name: filebeat-certs
          projected:
            sources:
              - secret:
                  name: wazuh-filebeat-tls
                  items:
                    - key: tls.crt
                      path: filebeat.pem
                    - key: tls.key
                      path: filebeat-key.pem
              - secret:
                  name: wazuh-root-ca
                  items:
                    - key: tls.crt
                      path: root-ca.pem
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: wazuh-manager
                    node-type: worker
                topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 101
      containers:
        - name: wazuh-manager
          image: wazuh/wazuh-manager:4.12.0
          securityContext:
            capabilities:
              add: ["SYS_CHROOT"]
          env:
            - name: INDEXER_URL
              value: https://indexer:9200
            - name: INDEXER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: username
            - name: INDEXER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexer-cred
                  key: password
            - name: FILEBEAT_SSL_VERIFICATION_MODE
              value: 'full'
            - name: SSL_CERTIFICATE_AUTHORITIES
              value: /etc/ssl/root-ca.pem
            - name: SSL_CERTIFICATE
              value: /etc/ssl/filebeat.pem
            - name: SSL_KEY
              value: /etc/ssl/filebeat.key
            - name: WAZUH_CLUSTER_KEY
              valueFrom:
                secretKeyRef:
                  name: wazuh-cluster-key
                  key: key
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: config-generated
              mountPath: /wazuh-config-mount/etc
            - name: config
              mountPath: /config-template
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/root-ca.pem
              subPath: root-ca.pem
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.pem
              subPath: filebeat.pem
              readOnly: true
            - name: filebeat-certs
              mountPath: /etc/ssl/filebeat.key
              subPath: filebeat-key.pem
              readOnly: true
            - name: wazuh-manager-worker
              mountPath: /var/ossec/api/configuration
              subPath: wazuh/var/ossec/api/configuration
            - name: wazuh-manager-worker
              mountPath: /var/ossec/etc
              subPath: wazuh/var/ossec/etc
            - name: wazuh-manager-worker
              mountPath: /var/ossec/logs
              subPath: wazuh/var/ossec/logs
            - name: wazuh-manager-worker
              mountPath: /var/ossec/queue
              subPath: wazuh/var/ossec/queue
            - name: wazuh-manager-worker
              mountPath: /var/ossec/var/multigroups
              subPath: wazuh/var/ossec/var/multigroups
            - name: wazuh-manager-worker
              mountPath: /var/ossec/integrations
              subPath: wazuh/var/ossec/integrations
            - name: wazuh-manager-worker
              mountPath: /var/ossec/active-response/bin
              subPath: wazuh/var/ossec/active-response/bin
            - name: wazuh-manager-worker
              mountPath: /var/ossec/agentless
              subPath: wazuh/var/ossec/agentless
            - name: wazuh-manager-worker
              mountPath: /var/ossec/wodles
              subPath: wazuh/var/ossec/wodles
            - name: wazuh-manager-worker
              mountPath: /etc/filebeat
              subPath: filebeat/etc/filebeat
            - name: wazuh-manager-worker
              mountPath: /var/lib/filebeat
              subPath: filebeat/var/lib/filebeat
      volumeClaimTemplates:
        - metadata:
            name: wazuh-manager-worker
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: wazuh-storage
            resources:
              requests:
                storage: 500Mi
      initContainers:
        - name: generate-ossec-config
          image: wazuh/wazuh-manager:4.12.0
          command:
            - sh
            - -c
            - |
              set -euo pipefail
              TEMPLATE=/config-template/worker.conf
              DEST_TMP=/wazuh-config-mount/etc/ossec.conf
              TARGET=/var/ossec/etc
              if [ ! -f "$TEMPLATE" ]; then echo "Template not found: $TEMPLATE" >&2; exit 1; fi
              cp "$TEMPLATE" "$DEST_TMP"
              if [ -n "${WAZUH_CLUSTER_KEY:-}" ]; then
                sed -i "s|<key>CHANGEME</key>|<key>${WAZUH_CLUSTER_KEY}</key>|" "$DEST_TMP"
              fi
              sed -i "s|__POD_IP__|${POD_IP:-127.0.0.1}|" "$DEST_TMP"
              if [ -n "${WAZUH_CLUSTER_KEY:-}" ]; then
                if ! printf '%s' "$WAZUH_CLUSTER_KEY" | grep -Eq '^[A-Za-z0-9]{32}$'; then
                  echo "FATAL: WAZUH_CLUSTER_KEY must be exactly 32 alphanumeric characters (current length ${#WAZUH_CLUSTER_KEY})." >&2
                  exit 2
                fi
              else
                echo "FATAL: WAZUH_CLUSTER_KEY env var empty" >&2
                exit 2
              fi
              if [ -d "$TARGET" ]; then
                if [ -z "$(ls -A "$TARGET" 2>/dev/null)" ] || [ ! -f "$TARGET/.seeded" ]; then
                  echo "Seeding $TARGET with default manager etc contents" >&2
                  for item in /var/ossec/etc/*; do
                    base="$(basename "$item")"
                    [ "$base" = "ossec.conf" ] && continue
                    cp -r "$item" "$TARGET/" 2>/dev/null || true
                  done
                  touch "$TARGET/.seeded"
                fi
                if [ ! -d "$TARGET/lists" ] || [ -z "$(ls -A "$TARGET/lists" 2>/dev/null)" ]; then
                  echo "Restoring lists directory contents" >&2
                  mkdir -p "$TARGET/lists"
                  cp -r /var/ossec/etc/lists/* "$TARGET/lists/" 2>/dev/null || true
                else
                  for f in audit-keys amazon/aws-eventnames; do
                    if [ ! -f "$TARGET/lists/$f" ] && [ -f "/var/ossec/etc/lists/$f" ]; then
                      cp "/var/ossec/etc/lists/$f" "$TARGET/lists/" 2>/dev/null || true
                    fi
                  done
                fi
                cp "$DEST_TMP" "$TARGET/ossec.conf"
                chmod 0640 "$TARGET/ossec.conf" || true
                chown 101:101 "$TARGET/ossec.conf" || true
              else
                echo "WARNING: Target dir $TARGET missing" >&2
              fi
              echo "Generated ossec.conf (cluster section):" >&2
              awk '/<cluster>/{flag=1} /<\/cluster>/{print;flag=0} flag' "$DEST_TMP" >&2 || true
          env:
            - name: WAZUH_CLUSTER_KEY
              valueFrom:
                secretKeyRef:
                  name: wazuh-cluster-key
                  key: key
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: config-generated
              mountPath: /wazuh-config-mount/etc
            - name: config
              mountPath: /config-template
              readOnly: true
