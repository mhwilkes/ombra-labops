# Media Application Template with Init Container
# This template shows how to properly integrate storage initialization

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: media-app-template
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # Deploy after storage init (wave 0)
spec:
  project: default  
  source:
    repoURL: https://bjw-s-labs.github.io/helm-charts
    chart: app-template
    targetRevision: 3.7.3
    helm:
      values: |
        controllers:
          app:
            pod:
              securityContext:
                runAsUser: 1000    # Standard media user ID
                runAsGroup: 1000   # Standard media group ID
                runAsNonRoot: true
                fsGroup: 1000      # Ensures volume permissions
                fsGroupChangePolicy: "OnRootMismatch"
            initContainers:
              init-permissions:
                image:
                  repository: alpine
                  tag: latest
                command:
                  - /bin/sh
                  - -c
                  - |
                    echo "Ensuring proper permissions for app directories..."
                    
                    # Ensure app-specific config directory exists with correct permissions
                    mkdir -p /data/config/APP_NAME
                    chown -R 1000:1000 /data/config/APP_NAME
                    chmod -R 750 /data/config/APP_NAME
                    
                    # Verify shared directories exist (should be created by main init job)
                    if [ ! -d "/data/media" ]; then
                      echo "ERROR: Shared media directories not found. Ensure media-storage-init job has run."
                      exit 1
                    fi
                    
                    echo "Directory permissions verified for APP_NAME"
                securityContext:
                  runAsUser: 0  # Run as root to set permissions
                  runAsGroup: 0
                volumeMounts:
                  - name: shared-data
                    mountPath: /data
            containers:
              app:                
                image:
                  repository: CONTAINER_IMAGE
                  tag: CONTAINER_TAG
                env:
                  TZ: America/New_York
                  PUID: "1000"      # User ID for the container
                  PGID: "1000"      # Group ID for the container
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  capabilities:
                    drop:
                      - ALL
        persistence:
          config:
            enabled: true
            type: persistentVolumeClaim
            storageClass: ceph-configs  # RBD storage for app config
            size: 1Gi
            accessMode: ReadWriteOnce
            globalMounts:
              - path: /config            
          shared-data:
            enabled: true
            type: persistentVolumeClaim
            existingClaim: media-shared-storage  # CephFS shared storage
            globalMounts:
              - path: /data
          tmp:
            enabled: true
            type: emptyDir
            globalMounts:
              - path: /tmp
  destination:
    server: https://kubernetes.default.svc
    namespace: media
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
# Instructions for using this template:
# 
# 1. Replace APP_NAME with your application name (e.g., sonarr, radarr, etc.)
# 2. Replace CONTAINER_IMAGE and CONTAINER_TAG with the appropriate values
# 3. Add any app-specific environment variables and configuration
# 4. Ensure the media-storage-init job runs first (sync-wave: "-1")
# 5. This app should have sync-wave: "1" or higher
#
# The init container pattern ensures:
# - App-specific directories are created with proper permissions
# - Shared directories exist before the app starts
# - Consistent user/group IDs across all applications
# - Proper volume permissions for CephFS shared storage
