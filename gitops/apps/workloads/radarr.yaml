apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: radarr
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://bjw-s.github.io/helm-charts
    chart: app-template
    targetRevision: 3.5.1
    helm:
      values: |
        controllers:
          radarr:
            containers:
              app:
                image:
                  repository: ghcr.io/onedr0p/radarr-develop
                  tag: 5.11.0.9244@sha256:82cfd5360d2cd0e9d9d0b88d1cc4e3dcb7c6e9e5ecd7dab9ba4b2c50fa97bbb6
                env:
                  TZ: America/New_York
                  RADARR__INSTANCE_NAME: Radarr
                  RADARR__PORT: &port 7878
                  RADARR__APPLICATION_URL: "https://radarr.local.example.com"
                  RADARR__LOG_LEVEL: info
                  RADARR__API_KEY: "your-api-key-here"
                resources:
                  requests:
                    cpu: 10m
                    memory: 250Mi
                  limits:
                    memory: 2Gi
        service:
          app:
            controller: radarr
            ports:
              http:
                port: *port
        ingress:
          app:
            enabled: true
            className: nginx
            hosts:
              - host: radarr.local.example.com
                paths:
                  - path: /
                    pathType: Prefix
                    service:
                      identifier: app
                      port: http
        persistence:
          config:
            enabled: true
            type: hostPath
            hostPath: /opt/radarr/config
            hostPathType: DirectoryOrCreate
            globalMounts:
              - path: /config
          downloads:
            enabled: true
            type: hostPath
            hostPath: /opt/downloads
            hostPathType: DirectoryOrCreate
            globalMounts:
              - path: /downloads
          media:
            enabled: true
            type: hostPath
            hostPath: /opt/plex/media/movies
            hostPathType: DirectoryOrCreate            globalMounts:
              - path: /media
  destination:
    server: https://kubernetes.default.svc
    namespace: arr
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
