# BJW-S App Template Examples
# This file demonstrates common patterns for using the bjw-s app-template chart

# Basic Web Application Example
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: example-app
  namespace: argocd
spec:
  project: default  
  source:
    repoURL: https://bjw-s-labs.github.io/helm-charts
    chart: app-template
    targetRevision: 3.5.1  # Always check for latest version
    helm:
      values: |
        # Define controllers (main application logic)
        controllers:
          example-app:  # Controller name
            containers:
              app:  # Main container
                image:
                  repository: nginx
                  tag: "1.25"
                env:
                  TZ: America/New_York
                  # Add environment variables here
                resources:
                  requests:
                    cpu: 10m
                    memory: 50Mi
                  limits:
                    memory: 200Mi
                # Health checks (optional)
                probes:
                  liveness:
                    enabled: true
                    custom: true
                    spec:
                      httpGet:
                        path: /
                        port: 80
                      initialDelaySeconds: 30
                      periodSeconds: 10
                  readiness:
                    enabled: true
                    custom: true
                    spec:
                      httpGet:
                        path: /
                        port: 80
                      initialDelaySeconds: 5
                      periodSeconds: 5
        
        # Define services
        service:
          app:
            controller: example-app
            ports:
              http:
                port: 80
        
        # Define ingress (optional)
        ingress:
          app:
            enabled: true
            className: nginx
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
            hosts:
              - host: example.local.example.com
                paths:
                  - path: /
                    pathType: Prefix
                    service:
                      identifier: app
                      port: http
            tls:
              - secretName: example-tls
                hosts:
                  - example.local.example.com
        
        # Define persistent storage (optional)
        persistence:
          config:
            enabled: true
            type: hostPath
            hostPath: /opt/example/config
            hostPathType: DirectoryOrCreate
            globalMounts:
              - path: /etc/nginx/conf.d
          data:
            enabled: true
            type: hostPath
            hostPath: /opt/example/data
            hostPathType: DirectoryOrCreate
            globalMounts:
              - path: /usr/share/nginx/html
        
        # Define ConfigMaps (optional)
        configMaps:
          config:
            enabled: true
            data:
              nginx.conf: |
                server {
                    listen 80;
                    server_name localhost;
                    location / {
                        root /usr/share/nginx/html;
                        index index.html index.htm;
                    }
                }
  destination:
    server: https://kubernetes.default.svc
    namespace: example
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Common Patterns and Tips:

# 1. Multiple Containers in a Pod:
# controllers:
#   app:
#     containers:
#       main:
#         image: ...
#       sidecar:
#         image: ...

# 2. Init Containers:
# controllers:
#   app:
#     initContainers:
#       setup:
#         image: busybox
#         command: ["sh", "-c", "echo 'Initializing...'"]

# 3. Secrets (create separately or use external-secrets):
# persistence:
#   secrets:
#     enabled: true
#     type: secret
#     name: app-secrets
#     globalMounts:
#       - path: /secrets

# 4. Multiple Services (e.g., web + API):
# service:
#   web:
#     controller: app
#     ports:
#       http:
#         port: 80
#   api:
#     controller: app
#     ports:
#       api:
#         port: 8080

# 5. LoadBalancer with specific IP:
# service:
#   app:
#     controller: app
#     type: LoadBalancer
#     loadBalancerIP: 192.168.55.XXX
#     ports:
#       http:
#         port: 80

# 6. EmptyDir for temporary storage:
# persistence:
#   tmp:
#     enabled: true
#     type: emptyDir
#     globalMounts:
#       - path: /tmp

# 7. Host networking (use carefully):
# controllers:
#   app:
#     pod:
#       hostNetwork: true
#       dnsPolicy: ClusterFirstWithHostNet

# 8. Security Context:
# controllers:
#   app:
#     pod:
#       securityContext:
#         runAsUser: 1000
#         runAsGroup: 1000
#         fsGroup: 1000
